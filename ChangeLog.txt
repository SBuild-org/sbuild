SBuild SVN/trunk

* A buildfile can now include other scala files. Added @include to share common
  configuration and functionality.
* Added project accessor to TargetContext.
* Added --quiet command line option to suppress percentage calculation and
  status messages. This will drastically speed up SBuild's initialization time
  for larger multi-projects, as the dependency tree is not walked trough in
  advance.
* Added arguments parameter to AntJava, as args is deprecated.

SBuild 0.1.5 - 2012-10-26

* Fixed NPE bug in AntCopy.

SBuild 0.1.4 - 2012-10-23

* Added parameters to AntZip Ant wrapper: compress, keepCompression, filesOnly,
  fileSet, fileSets
* Added parameters to AntJar Ant wrapper: compress, keepCompression, filesOnly,
  metaInf, fileSet, fileSets, manifestEntries, manifestSectionEntries, service,
  services
* Added parameter to AntCopy Ant wrapper: fileSet
* Added @configuration annotation, to declare required configuration parameters
  in a project
* Eclipse plugin: Fixed an problem with an incomplete project classpath that
  could break loading of projects in some situations.
* Eclipse plugin: Handle errors while reading the build file and retrieving
  dependencies
* Improved ZipSchemeHandler: The targetFile parameter now treats its argument
  as path relative the to project directory.
* Internal changes in classpath handling. The various classpathes SBuild needs
  when reading, compiling and executing projects are now read from a properties
  file in the installation directory, which decouples embedded solutions like
  the Eclipse Plugin and allows them to load different SBuild versions.
* Added get method to Prop object, to easily test, if an property is set.
* Eclipse plugin: Decoupled plugin version from SBuild JARs. Plugin no longer 
  includes core packages and load SBuild JARs from it installation directory.
* Ensure, ZipSchemeHandler does not overwrite files with same name from
  different archives.

SBuild 0.1.3 - 2012-10-18

* Improved classloading for ScalaTest and JUnit addons.
* Incompatible API change: SchemeHandler can now have dependencies, when 
  implementing the trait SchemeHandlerWithDependencies and have access to them
  through the TargetContext, which will be given as parameter into resolve
  method.
* Added new ZipSchemeHandler to reference zipped resources, a typical use case
  for original online dependencies like TestNG, JUnit or SWT.
* Fixed a bug, where the self-evaluated up-to-date state of phony targets was
  lost causing some unnecessary executions.

SBuild 0.1.2 - 2012-10-04

* Fixed cross-project dependency resolution problem for file targets.

SBuild 0.1.1 - 2012-09-26

* SBuild now builds itself. SBuild-0.1.0 is required. :-)
* SchemeHandler API changed: Return value of resolve-method changed to
  ResolveResult.
* Added new parameter forceDownload to HttpSchemeHandler.
* Improved/fixed up-to-date detection for prerequisites/dependencies from
  different projects.
* Only targets defined in buildfiles will be shown with --list and
  --list-recursive, implicitly create targets will be not.
* Improved error messages.
* Improved logging.
* Added new commandline option --dependency-tree to show the dependency tree
  for the requested targets.
* Better cycle-detecting in target dependencies.
* Better detection, if the buildfile needs recompilation in case that different
  versions of SBuild are used.
* Run SBuild JVM with more PermGemSpace to avoid OutOfMemoryErrors.
* New Eclipse Plugin that is able the provide a classpath container based on
  an SBuild buildfile. Therefore the function ExportDependencies was added.
* Removed parameter dir:String from AntMkDir.
* Added parameter fileSets to AntCopy.
* Added parameter jvmArgs to AntScalac.
* Added parameter failOnError to AntJava.
* Added a lot of new parameter to AntJavac.
* Added parameter envs to AntEcec.
* Added addon ScalaTest.
* Added addon JUnit.

SBuild 0.1.0 - 2012-07-29

* Initial public release.
